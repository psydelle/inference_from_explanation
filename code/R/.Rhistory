conjunctive_normal = conjunctive_agent_normal,
disjunctive_abnormal = disjunctive_agent_abnormal,
disjunctive_normal = disjunctive_agent_normal) %>%
mutate(norm = "prescriptive")) %>%
filter(exclude == 0) %>% # filter based on exclusion criteria
select(-c(norm_condition, structure)) %>%
rename(conjunctive_cause = conjunctive,
disjunctive_cause = disjunctive) %>%
mutate(participant = 1:n(),
across(c(contains("disjunctive"), contains("conjunctive")), ~ as.character(.))) %>%
pivot_longer(names_to = c("structure", "index"),
names_sep = "_",
cols = c(contains("disjunctive"), contains("conjunctive"))) %>%
pivot_wider(names_from = index,
values_from = value) %>%
mutate(across(c(cause, abnormal, normal), ~ as.numeric(.))) %>%
mutate(selection = factor(selection, levels = c("abnormal", "normal")),
structure = factor(structure, levels = c("conjunctive", "disjunctive")),
norm = factor(norm, levels = c("statistical", "prescriptive")))
df.structure.demo = df.stat_abnormal_data %>%
select(feedback,
age_1_text,
gender,
race_1_text,
ethnicity) %>%
mutate(norm = "statistical",
normality = "abnormal",
participant = 1:n()) %>%
left_join(df.stat_abnormal_judgments %>%
select(participant, exclude),
by = "participant") %>%
bind_rows(df.stat_normal_data %>%
select(feedback,
age_1_text,
gender,
race_1_text,
ethnicity) %>%
mutate(norm = "statistical",
normality = "normal",
participant = 1:n()) %>%
left_join(df.stat_normal_judgments %>%
select(participant, exclude),
by = "participant")) %>%
bind_rows(df.pres_abnormal_data %>%
select(feedback,
age_1_text,
gender,
race_1_text,
ethnicity) %>%
mutate(norm = "prescriptive",
normality = "abnormal",
participant = 1:n()) %>%
left_join(df.pres_abnormal_judgments %>%
select(participant, exclude),
by = "participant")) %>%
bind_rows(df.pres_normal_data %>%
select(feedback,
age_1_text,
gender,
race_1_text,
ethnicity) %>%
mutate(norm = "prescriptive",
normality = "normal",
participant = 1:n()) %>%
left_join(df.pres_normal_judgments %>%
select(participant, exclude),
by = "participant")) %>%
mutate(age = as.numeric(age_1_text),
age = ifelse(age > 1000, 2019 - age, age),
gender = ifelse(gender == 1, "Female", gender),
gender = ifelse(gender == 2, "Male", gender),
gender = ifelse(gender == 3, "Non-binary", gender),
gender = ifelse(gender == 4, "Prefer not to say.", gender))
df.structure.demo %>%
summarize(n_excluded = sum(exclude == 1))
df.structure.demo %>%
filter(exclude == 0) %>%
count(norm, normality) %>%
print_table()
df.structure.demo %>%
# filter(exclude == 0) %>%
summarize(n_total = n(),
n_female = sum(gender == "Female"),
n_male = sum(gender == "Male"),
n_not_say = sum(gender == "Prefer not to say."),
n_non_binary = sum(gender == "Non-binary"),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T)) %>%
mutate(across(contains("age"), round)) %>%
pivot_longer(cols = everything()) %>%
print_table()
# remove unnecessary variables
rm(list = ls()[!ls() %in% c("df.normality",
"df.normality.demo",
"df.structure",
"df.structure.demo",
"print_table",
"fit_normality_selection",
"fit_normality_judgment",
"p.exp1.selections")])
df.structure
skimr::skim(df.structure)
set.seed(1)
df.plot = df.structure %>%
mutate(selection = ifelse(selection == "abnormal", 1, 0),
norm = factor(norm,
levels = c("statistical", "prescriptive"),
labels = c("statistical\nnorm", "prescriptive\nnorm")))
df.text = df.plot %>%
distinct(participant, norm) %>%
count(norm) %>%
mutate(label = str_c("n = ", n),
selection = 1.05,
structure = NA)
df.line = df.plot %>%
group_by(norm, structure) %>%
summarize(selection = mean(selection)) %>%
ungroup() %>%
mutate(x = c(0.75, 1.25, 1.75, 2.25))
p.exp2.selections = ggplot(data = df.plot,
mapping = aes(x = norm,
y = selection,
group = structure,
fill = structure)) +
geom_hline(yintercept = 0.5,
linetype = 2) +
stat_summary(fun.data = "mean_cl_boot",
geom = "pointrange",
position = position_dodge(width = 0.5),
size = 1.5,
shape = 21,
alpha = 0) +
geom_text(data = df.text,
mapping = aes(label = label),
position = position_dodge(width = 0.5),
size = 6) +
labs(x = "type of norm",
y = "% abnormal cause selections",
title = "Experiment 2") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(breaks = seq(0, 1, 0.25),
labels = str_c(seq(0, 100, 25), "%"),
expand = expansion(mult = c(0.05, 0))) +
coord_cartesian(clip = "off",
ylim = c(0, 1)) +
theme(text = element_text(size = 24),
legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(t = 1, l = 0.2, r = 0.2, unit = "cm"),
plot.title = element_text(vjust = 4,
color = "gray40",
hjust = 0.5))
p.exp2.selections = p.exp2.selections + geom_line(data = layer_data(p.exp2.selections, 2L),
mapping = aes(x = x,
y = y,
group = rep(1:2, 2),
fill = NA),
size = 1,
linetype = 1) +
stat_summary(fun.data = "mean_cl_boot",
geom = "pointrange",
position = position_dodge(width = 0.5),
size = 1.5,
shape = 21)
p.exp2.selections
ggsave(filename = "../../figures/plots/structure_selections.pdf",
plot = p.exp2.selections,
width = 8,
height = 6)
set.seed(1)
df.plot = df.structure %>%
select(participant, norm, explanation, judgment) %>%
distinct() %>%
mutate(norm = factor(norm,
levels = c("statistical", "prescriptive"),
labels = c("statistical\nnorm", "prescriptive\nnorm")),
judgment = judgment - 50)
df.text = df.plot %>%
count(explanation, norm) %>%
mutate(label = str_c("n = ", n),
judgment = 55)
p.exp2.judgments = ggplot(data = df.plot,
mapping = aes(x = norm,
y = judgment,
group = explanation,
fill = explanation)) +
geom_hline(yintercept = 0,
linetype = 2) +
geom_point(mapping = aes(color = explanation),
alpha = 0.2,
size = 2,
position = position_jitterdodge(jitter.width = 0.1,
dodge.width = 0.5),
show.legend = F) +
stat_summary(fun.data = "mean_cl_boot",
geom = "pointrange",
position = position_dodge(width = 0.5),
size = 1.5,
shape = 21) +
annotate(x = c(0.5, 0.5),
y = c(-50, 50),
geom = "text",
label = c("preference for\ndisjunctive structure", "preference for\nconjunctive structure"),
hjust = c(0, 1),
angle = 90,
size = 5) +
geom_text(data = df.text,
mapping = aes(label = label),
position = position_dodge(width = 0.5),
size = 5) +
labs(x = "type of norm",
y = "structure inference") +
scale_fill_manual(values = c("#984EA3", "#4DAF4A")) +
scale_color_manual(values = c("#984EA3", "#4DAF4A")) +
scale_y_continuous(breaks = seq(-50, 50, 25),
labels = seq(-50, 50, 25),
expand = expansion(mult = c(0.05, 0))) +
coord_cartesian(clip = "off",
ylim = c(-50, 50)) +
theme(text = element_text(size = 24),
legend.position = "bottom",
axis.title.x = element_blank(),
plot.margin = margin(t = 1, l = 0.2, r = 0.2, unit = "cm"))
ggsave("../../figures/plots/structure_judgments.pdf",
width = 8,
height = 6)
set.seed(1)
df.plot = df.structure %>%
select(participant, explanation, judgment, norm, structure, selection) %>%
pivot_wider(names_from = "structure",
values_from = "selection") %>%
mutate(disjunctive = str_c("D: ", disjunctive),
conjunctive = str_c("C: ", conjunctive)) %>%
unite("selection", c(disjunctive, conjunctive), sep = "&", remove = F) %>%
mutate(judgment = judgment - 50,
selection = str_replace(selection, "&", "\n"))
df.text = df.plot %>%
count(selection) %>%
mutate(judgment = 55,
label = str_c("n = ", n),
explanation = NA)
p.exp2.individual = ggplot(data = df.plot,
mapping = aes(x = selection,
y = judgment,
group = explanation,
fill = explanation)) +
geom_hline(yintercept = 0,
linetype = 2) +
geom_point(mapping = aes(color = explanation),
alpha = 0.2,
size = 2,
position = position_jitterdodge(jitter.width = 0.1,
dodge.width = 0.5),
show.legend = F) +
stat_summary(fun.data = "mean_cl_boot",
geom = "pointrange",
position = position_dodge(width = 0.5),
size = 1.5,
shape = 21) +
annotate(x = c(0.54, 0.54),
y = c(-50, 50),
geom = "text",
label = c("preference for\ndisjunctive structure", "preference for\nconjunctive structure"),
hjust = c(0, 1),
angle = 90,
size = 4.5) +
geom_text(data = df.text,
mapping = aes(label = label),
position = position_dodge(width = 0.5),
size = 5) +
labs(x = "participants' causal selections",
y = "structure inference") +
scale_fill_manual(values = c("#984EA3", "#4DAF4A")) +
scale_color_manual(values = c("#984EA3", "#4DAF4A")) +
scale_y_continuous(breaks = seq(-50, 50, 25),
labels = seq(-50, 50, 25),
expand = expansion(mult = c(0.05, 0))) +
coord_cartesian(clip = "off",
ylim = c(-50, 50)) +
theme(text = element_text(size = 24),
legend.position = "bottom",
axis.title.x = element_text(margin = margin(t = 0.5, unit = "cm")),
plot.margin = margin(t = 1, l = 0.2, r = 0.2, unit = "cm"))
p.exp2.individual
ggsave(filename = "../../figures/plots/structure_judgments_based_on_selections.pdf",
plot = p.exp2.individual,
width = 8,
height = 6)
df.structure %>%
count(structure, selection) %>%
group_by(structure) %>%
mutate(perc = n/sum(n)) %>%
filter(selection == "abnormal") %>%
select(-n) %>%
print_table()
df.structure %>%
group_by(explanation) %>%
summarize(mean = mean(judgment),
sd = sd(judgment)) %>%
print_table()
fit_structure_selection = brm(formula = selection ~ 1 + structure * norm + (1 | participant),
family = "bernoulli",
data = df.structure,
seed = 1,
cores = 2,
file = "cache/fit_structure_selection")
fit_structure_selection
fit_structure_selection = brm(formula = selection ~ 1 + structure * norm + (1 | participant),
family = "bernoulli",
data = df.structure,
seed = 1,
cores = 2,
file = "cache/fit_structure_selection")
fit_structure_selection
pp_check(fit_structure_selection, ndraws = 100)
pp_check(fit_structure_selection, ndraws = 100, type = "xyz")
pp_check(fit_structure_selection, ndraws = 100, type = "boxplot")
pp_check(fit_structure_selection, ndraws = 100, type = "xyz")
pp_check(fit_structure_selection, ndraws = 100, type = "hist")
pp_check(fit_structure_selection, ndraws = 100, type = "loo_intervals")
pp_check(fit_structure_selection, ndraws = 100, type = "scatter_avg")
brms::mcmc_plot(fit_structure_selection)
brms::plot(fit_structure_selection)
brms::stanplot(fit_structure_selection)
brms::mcmc_plot(fit_structure_selection)
brms::mcmc_plot(fit_normality_selection)
vcov(fit_normality_selection)
fit_structure_selection = brm(formula = selection ~ 1 + structure * norm + (1 | participant),
family = "bernoulli",
data = df.structure,
seed = 1,
cores = 2,
file = "cache/fit_structure_selection")
fit_structure_selection
pp_check(fit_structure_selection, ndraws = 100, type = "scatter_avg")
ppc_stat(y, yrep, stat = "median") + grid_lines()
brms::mcmc_plot(fit_structure_selection)
brms::mcmc_plot(fit_normality_selection)
vcov(fit_normality_selection)
fit_structure_judgment = brm(formula = judgment ~ explanation * norm,
data = df.structure %>%
select(participant, norm, explanation, judgment) %>%
distinct(),
seed = 1,
cores = 2,
file = "cache/fit_structure_judgment")
fit_structure_judgment
pp_check(fit_structure_judgment, ndraws = 100)
fit_structure_selection %>%
tidy(conf.method = "HPDinterval",
fix.intercept = F) %>%
filter(effect == "fixed") %>%
mutate(term = tolower(term),
term = str_remove_all(term, "1"),
across(where(is.numeric), ~ round(., 2))) %>%
rename(`lower 95% CI` = conf.low,
`upper 95% CI` = conf.high) %>%
select(-c(effect:group,std.error)) %>%
print_table()
fit_structure_judgment %>%
gather_draws(b_Intercept,
b_explanation1,
b_norm1,
`b_explanation1:norm1`) %>%
mean_hdi() %>%
rename(term = .variable,
estimate = .value,
`lower 95% CI` = .lower,
`upper 95% CI` = .upper) %>%
select(-c(.width, .point, .interval)) %>%
mutate(term = tolower(term),
term = str_remove_all(term, "b_"),
term = str_remove_all(term, "1"),
term = factor(term, levels = c("intercept", "explanation", "norm", "explanation:norm"))) %>%
arrange(term) %>%
print_table()
df.structure %>%
select(participant, judgment, norm, structure, selection) %>%
pivot_wider(names_from = "structure",
values_from = "selection") %>%
count(disjunctive, conjunctive) %>%
print_table()
df.structure %>%
select(participant, explanation, judgment, norm, structure, selection) %>%
pivot_wider(names_from = "structure",
values_from = "selection") %>%
mutate(disjunctive = str_c("D: ", disjunctive),
conjunctive = str_c("C: ", conjunctive)) %>%
unite("selection", c(disjunctive, conjunctive), sep = " & ", remove = F) %>%
group_by(explanation, selection) %>%
summarize(judgment = mean(judgment),
n = n()) %>%
pivot_wider(names_from = explanation,
values_from = c(judgment, n)) %>%
ungroup() %>%
mutate(difference = judgment_abnormal - judgment_normal,
n = n_abnormal + n_normal) %>%
select(-c(n_abnormal, n_normal)) %>%
mutate(across(where(is.numeric), ~ round(., 2))) %>%
print_table()
# experiment 1: percentage of choosing the abnormal cause as a function of causal structure
df.normality %>%
group_by(structure) %>%
summarize(percentage = sum(selection == "abnormal")/n()) %>%
mutate(across(where(is.numeric), ~ round(., 2) * 100))
# experiment 1: normality inference as a function of causal structure
df.normality %>%
group_by(structure) %>%
summarize(judgment_mean = mean(judgment),
judgment_sd = sd(judgment)) %>%
mutate(across(where(is.numeric), ~ round(., 2)))
# experiment 2: percentage of choosing the abnormal cause as a function of causal structure
df.structure %>%
group_by(structure) %>%
summarize(percentage = sum(selection == "abnormal")/n()) %>%
mutate(across(where(is.numeric), ~ round(., 2) * 100))
# experiment 2: structure inference as a function of normality
df.structure %>%
group_by(explanation) %>%
summarize(judgment_mean = mean(judgment),
judgment_sd = sd(judgment)) %>%
mutate(across(where(is.numeric), ~ round(., 2)))
ffit_normality_selection = glm(formula = selection ~ structure * norm,
family = "binomial",
data = df.normality)
summary(ffit_normality_selection)
plot(ffit_normality_selection)
performance::model_performance(ffit_normality_selection)
performance::check_model(ffit_normality_selection)
sjPlot::plot_model(ffit_normality_selection, type = "pred")
ffit_normality_selection_null = glm(formula = selection ~ 1,
family = "binomial",
data = df.normality)
summary(ffit_normality_selection_null)
ffit_normality_selection_m1 = glm(formula = selection ~ structure,
family = "binomial",
data = df.normality)
summary(ffit_normality_selection_m1)
ffit_normality_selection_m2 = glm(formula = selection ~ norm,
family = "binomial",
data = df.normality)
summary(ffit_normality_selection_m2)
ffit_normality_selection_m3 = glm(formula = selection ~ structure + norm,
family = "binomial",
data = df.normality)
summary(ffit_normality_selection_m3)
ffit_normality_selection_m4 = glm(formula = selection ~ structure : norm,
family = "binomial",
data = df.normality)
summary(ffit_normality_selection_m4)
# analysis of deviance & effect size
aov_normality_selection = Anova(ffit_normality_selection,
type = 3) %>%
as_tibble(rownames = "Term") %>%
mutate(cramers_v = map(`LR Chisq`, ~ chisq_to_cramers_v(chisq = .,
n = nrow(df.normality),
nrow = 2,
ncol = 2))) %>%
unnest(cramers_v)
aov_normality_selection %>%
print_table()
table_normality_selection = table(df.normality$structure,
df.normality$selection)
pwr.chisq.test(w = table_normality_selection %>%
chisq.test() %>%
.[1] %>%
as.numeric(),
N = sum(table_normality_selection),
df = 1)
# model fit
ffit_normality_judgment = lm(formula = judgment ~ structure * norm,
data = df.normality)
# anova
aov_normality_judgment = Anova(ffit_normality_judgment,
type = 3)
# model fit
ffit_normality_judgment = lm(formula = judgment ~ structure * norm,
data = df.normality)
# anova
aov_normality_judgment = Anova(ffit_normality_judgment,
type = 3)
aov_normality_judgment %>%
as_tibble(rownames = "Term") %>%
print_table()
# partial eta squared
eta_squared(ffit_normality_judgment,
ci = 0.95) %>%
print_table()
aov_normality_selection %>%
print_table()
# model fit
ffit_normality_judgment = lm(formula = judgment ~ structure * norm,
data = df.normality)
plot(ffit_normality_judgment)
# post-hoc power analysis
pwr.anova.test(k = 2,
n = df.normality %>%
count(structure) %>%
.$n %>%
min(),
f = aov_normality_judgment$`F value`[1])
p.exp1.selections + p.exp2.selections +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(face = "bold"),
plot.margin = margin(t = 0.1, r = 0.1, l = 0.1, b = 0, unit = "cm"))
ggsave(filename = "../../figures/plots/selections.pdf",
width = 16,
height = 6)
skim(df.structure)
skimr::skim(df.structure)
view(df.structure)
